// –∫–ª–∞—Å—Å

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Car —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏
// –º–µ—Ç–æ–¥–∞–º–∏.

// class Car {üëâ

// 2Ô∏è‚É£ –î–æ–±–∞–≤—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ getSpecs(car),
// –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç-–º–∞—à–∏–Ω—É –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∞–±–ª–æ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏
// –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –æ–±—ä–µ–∫—Ç–∞.
//  –°–≤–æ–π—Å—Ç–≤–∞:
//    maxSpeed,
//    speed,
//    isOn,
//    distance,
//    price
// –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —ç—Ç–∏–º –º–µ—Ç–æ–¥–æ–º:
// 'maxSpeed: 200, speed: 50, isOn: true,
// distance: 100, price: 2000'
//
// 1Ô∏è‚É£constructor() { }
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ–ª—É—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫.
// –î–æ–±–∞–≤—å —Å–≤–æ–π—Å—Ç–≤–∞ –±—É–¥—É—â–µ–µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞:
//  speed - —Ç–µ–∫—É—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å,
//          –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ `0`
//  price - —Ü–µ–Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
//  maxSpeed - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
//  isOn - –∑–∞–≤–µ–¥–µ–Ω –ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å.
//         –ó–Ω–∞—á–µ–Ω–∏—è `true` –∏–ª–∏ `false`,
//         –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ false
//  distance - –ø—Ä–æ–±–µ–≥ –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö,
//             –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ `0`
//
// 3Ô∏è‚É£–î–æ–±–∞–≤—å –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä
// –¥–ª—è —Å–≤–æ–π—Å—Ç–≤–∞ `price`, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å
// —Å–æ —Å–≤–æ–π—Å—Ç–≤–æ–º —Ü–µ–Ω—ã –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
// ‚ùó–í–ê–ñ–ù–û: –¥–ª—è –∑–∞–ø–∏—Å–∏ –º–µ—Ç–æ–¥–æ–≤ get –∏ set
//  –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç —Å
//  –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º. –°–º. –Ω–∏–∂–µ –ø—Ä–∏–º–µ—Ä 1.‚ùó

// 4Ô∏è‚É£turnOn() { }
//  –ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–≤–æ–¥–∏—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å
//  –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–æ `isOn` –∑–Ω–∞—á–µ–Ω–∏–µ `true`

// 5Ô∏è‚É£turnOff() { }
//  –ú–µ—Ç–æ–¥, —á—Ç–æ–±—ã –∑–∞–≥–ª—É—à–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å
//  –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å
//  –≤ —Å–≤–æ–π—Å—Ç–≤–æ isOn –∑–Ω–∞—á–µ–Ω–∏–µ false,
//  –∏ —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ 0

// 6Ô∏è‚É£accelerate(value) { }
//  –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–ª—è—Ç—å
//  –∫ —Å–≤–æ–π—Å—Ç–≤—É `speed` –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ
//  –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏,
//  —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
//  –Ω–µ –±–æ–ª—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ `maxSpeed`

// 7Ô∏è‚É£decelerate(value) { }
// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –æ—Ç–Ω–∏–º–∞—Ç—å
// –æ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ `speed`
// –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏,
// —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 0

// 8Ô∏è‚É£drive(hours) { }
// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–ª—è—Ç—å –∫ —Å–≤–æ–π—Å—Ç–≤—É
// `distance` –ø—Ä–æ–±–µ–≥ –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö,
// —Ç.–µ. hours * speed,
// –Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ,
// –µ—Å–ª–∏ –º–∞—à–∏–Ω–∞ –∑–∞–≤–µ–¥–µ–Ω–∞!

// üëà}

// ‚ùó‚ùó‚ùó –ü—Ä–∏–º–µ—Ä 1.

// class Guest {

// –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞ —Ä–∞–∑–º–µ—â–∞–µ–º –≤
// –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ

//   constructor(name, roomNumber) {

// –ø–∞—Ä–∞–º–µ—Ç—Ä name –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º
// —Å–≤–æ–π—Å—Ç–≤–∞, –Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Ö–æ–∂. –ü–æ—ç—Ç–æ–º—É
// –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø—Ä–∏–µ–º —Å–º–µ–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª—è—è
// —Å–∏–º–≤–æ–ª '_', (—Ö–æ—Ç—è —ç—Ç–æ –º–æ–∂–µ—Ç –ª—é–±–æ–π –¥—Ä—É–≥–æ–π
// —Å–∏–º–≤–æ–ª).
//
//     this._name = name;
//   }

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
// –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º
//   get name() {
//     return this._name;
//   }

//   set name(value) {
//     this._name = value;
//   }
// }‚ùó‚ùó‚ùó

const mustang = new Car({ maxSpeed: 200, price: 2000 });

mustang.turnOn();
mustang.accelerate(50);
mustang.drive(2);

console.log(Car.getSpecs(mustang));
// 'maxSpeed: 200, speed: 50, isOn: true,
// distance: 100, price: 2000'

mustang.decelerate(20);
mustang.drive(1);
mustang.turnOff();

console.log(Car.getSpecs(mustang));
// 'maxSpeed: 200, speed: 0, isOn: false,
// distance: 130, price: 2000'

console.log(mustang.price); // 2000
mustang.price = 4000;
console.log(mustang.price); // 4000

//
//
//
//
//
//
// class Car {
//   static getSpecs(car) {
//     const { speed, _price, maxSpeed, isOn, distance } = car;
//     return `maxSpeed: ${maxSpeed}, speed: ${speed}, isOn: ${isOn}, distance: ${distance}, price: ${_price}`;
//   }

//   constructor({ speed = 0, price, maxSpeed, isOn = false, distance = 0 } = {}) {
//     this.speed = speed;
//     this._price = price;
//     this.maxSpeed = maxSpeed;
//     this.isOn = isOn;
//     this.distance = distance;
//   }

//   get price() {
//     return this._price;
//   }

//   set price(value) {
//     this._price = value;
//   }

//   turnOn() {
//     this.isOn = true;
//   }

//   turnOff() {
//     this.isOn = false;
//     this.speed = 0;
//   }

//   accelerate(value) {
//     if (this.speed + value <= this.maxSpeed) {
//       this.speed += value;
//     } else {
//       this.speed = this.maxSpeed;
//     }
//   }

//   decelerate(value) {
//     if (this.speed - value >= 0) {
//       this.speed -= value;
//     } else {
//       this.speed = 0;
//     }
//   }

//   drive(hours) {
//     if (this.isOn) {
//       this.distance += this.speed * hours;
//     }
//   }
// }
